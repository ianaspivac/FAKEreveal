[{"D:\\FAKEreveal\\my-app\\src\\index.js":"1","D:\\FAKEreveal\\my-app\\src\\reportWebVitals.js":"2","D:\\FAKEreveal\\my-app\\src\\App.js":"3","D:\\FAKEreveal\\my-app\\src\\Landing.js":"4","D:\\FAKEreveal\\my-app\\src\\VideoForm.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":343,"mtime":1607087550022,"results":"9","hashOfConfig":"7"},{"size":280,"mtime":1607101118308,"results":"10","hashOfConfig":"7"},{"size":2154,"mtime":1607199861245,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"17xzp26",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"D:\\FAKEreveal\\my-app\\src\\index.js",[],["24","25"],"D:\\FAKEreveal\\my-app\\src\\reportWebVitals.js",[],"D:\\FAKEreveal\\my-app\\src\\App.js",[],"D:\\FAKEreveal\\my-app\\src\\Landing.js",[],"D:\\FAKEreveal\\my-app\\src\\VideoForm.js",["26"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport './VideoForm.css';\r\n\r\nexport default class VideoForm extends React.Component {\r\n\r\n  state = {\r\n    deepfake_status: null,\r\n    uploaded: null,\r\n    selectedFile: null,\r\n    loaded: false\r\n  };\r\n\r\n  onFileChange = event => {\r\n\r\n    // Update the state \r\n    this.setState({ selectedFile: event.target.files[0] });\r\n\r\n  };\r\n\r\n  // On file upload (click the upload button) \r\n  onFileUpload = (event) => {\r\n    this.setState({deepfake_status:null,uploaded:false});\r\n\r\n    // Create an object of formData \r\n    const formData = new FormData();\r\n\r\n   // Update the formData object \r\n   formData.append(\r\n    \"file\",\r\n    this.state.selectedFile,\r\n  );\r\n\r\n  // Details of the uploaded file \r\n  /*console.log(this.state.selectedFile);\r\n\r\n  const headers = { \"Content-Type\": \"multipart/form-data\" }\r\n\r\n  const response = axios.post(`http://127.0.0.1:5000/api`, formData, {headers :headers}).then(res => {\r\n  console.log(res);   \r\n  this.setState({loaded:true,uploaded:true,deepfake_status:res.data.status});\r\n  })*/\r\n  this.setState({loaded:true,uploaded:true,deepfake_status:\"ok\"});\r\n  };\r\n\r\n  fileData = () => {\r\n    if (this.state.uploaded) {\r\n      if (this.state.loaded) {\r\n        if (this.state.deepfake_status) {      \r\n          return (<div>\r\n            <h3>{this.state.deepfake_status}</h3>\r\n          </div>);    \r\n      }}\r\n      else{\r\n        return (<div>\r\n          <p>Loading...</p>\r\n        </div>);\r\n      }\r\n     }else {\r\n      return (\r\n        <div>\r\n          <br />\r\n          <p>Choose before Pressing the Verify button</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"VideoForm\">\r\n        <div className=\"form-container\">\r\n          <h2>\r\n            Upload a video to verify\r\n            </h2>\r\n          <div>\r\n            <form onSubmit={this.onFileUpload} >\r\n              <input type=\"file\" accept=\"video/*\" onChange={this.onFileChange} required/>\r\n              <input type=\"submit\" value=\"Verify\" />\r\n            </form>\r\n          </div>\r\n          {this.fileData()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n} \r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":13},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]